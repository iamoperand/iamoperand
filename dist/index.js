!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("apollo-server-express")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("merge-graphql-schemas")},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(1),a=n(2);n.n(a).a.config();const s=process.env.PORT||4040;let p=`http://localhost:${s}`;const c={PLAYGROUND_URL:"/",DEFAULT_QUERY:"\n  query {\n    name\n    email\n    age\n    github\n    medium\n    twitter\n    stackoverflow\n    projects {\n      name\n      description\n      github\n      website\n      technologies\n    }\n    jobs {\n      company\n      website\n      role\n      location\n      technologies\n      started\n      finished\n    }\n    repos {\n      name\n      url\n      description\n      language\n      owner\n    }\n  }\n"};var u={PORT:s,URL:p="https://iamoperand.now.sh"};var l={name:()=>"Nikhil Arora",email:()=>"iamoperand.work@gmail.com",age:()=>21,github:()=>"https://github.com/iamoperand",medium:()=>"https://medium.com/@iamoperand",twitter:()=>"https://twitter.com/iamoperand",stackoverflow:()=>"https://stackoverflow.com/users/5733330/nikhil-arora",projects:()=>[{name:"The Remotants",description:"Dashboard for Remote Workers: Aimed to solve the problem of work effort visibility in remote teams.",technologies:["React","Redux","Express JS","Mongo"],github:"https://github.com/PestoTech/project-the-remotants-frontend",website:"https://the-remotants.netlify.com"},{name:"Hackernews Clone",description:"Made it while learning GraphQL",technologies:["GraphQL","Apollo","React","Express JS"],github:"https://github.com/Graph-QL/hackernews-client"},{name:"Reduxstagram",description:"Learnt Redux while making it!",technologies:["React","Redux"],github:"http://github.com/iamoperand/reduxstagram",website:"https://iamoperand.github.io/reduxstagram/"},{name:"Medicine Bazaaâ‚¹",description:"Android e-commerce app for pharmaceuticals",technologies:["Ionic 2","Cordova","TypeScript","Firebase"],github:"https://github.com/iamoperand/medicineBazaarAndroid",website:"https://bit.ly/medicinebazaar"},{name:"Event Project",description:"An event management system",technologies:["Express JS","Sequelize JS","Passport JS"],github:"https://github.com/iamoperand/EventProject"},{name:"Token System",description:"Built a token system for Avionic Solutions (B2X)",technologies:["Laravel","Gulp","Bootstrap"],github:"https://github.com/iamoperand/genIThubB2X/blob/master/package.json"}],jobs:()=>[{company:"MapleGraph Solutions",website:"https://maplegraph.com/",role:"Full Stack Engineer",location:"Noida, India",technologies:["Adonis JS","Node JS","MySQL","Laravel"],started:"September, 2017",finished:"May, 2018"},{company:"Nagarro",website:"https://www.nagarro.com/en",role:"Trainee",location:"Gurugram, India",technologies:["React","Node JS","Sequelize JS","Passport JS","MySQL"],started:"June, 2017",finished:"July, 2017"}],repos:()=>[{name:"Interview Preparation",url:"https://github.com/atpesto/interview-prep",description:"Set of questions that are focused towards preparing you for the interview",language:"JavaScript",owner:"iamoperand"}]},g=n(3);const m=["\n  type Query {\n    name: String!\n    email: String!\n    age: Int!\n    github: String!\n    medium: String!\n    twitter: String!\n    stackoverflow: String!\n  }\n","\n  type Job {\n    company: String!\n    website: String!\n    role: String!\n    location: String!\n    technologies: [String!]\n    started: String\n    finished: String\n  }\n\n  type Query {\n    jobs: [Job!]\n  }\n","\n  type Project {\n    name: String!\n    description: String!\n    technologies: [String!]\n    github: String!\n    website: String\n  }\n\n  type Query {\n    projects: [Project!]\n  }\n","\n  type Repo {\n    name: String!\n    url: String!\n    description: String!\n    language: String!\n    owner: String!\n  }\n\n  type Query {\n    repos: [Repo!]\n  }\n"];var d=Object(g.mergeTypes)(m);const{PORT:h,URL:b}=u,{DEFAULT_QUERY:S,PLAYGROUND_URL:f}=c,y={Query:l},w=new i.ApolloServer({typeDefs:d,resolvers:y,playground:{settings:{"editor.theme":"dark","editor.fontSize":12,"editor.cursorShape":"line","prettier.printWidth":80},tabs:[{endpoint:b,query:S}]}}),v=o()();w.applyMiddleware({app:v,path:f}),v.listen({port:h},()=>{console.log(`ğŸš€  Server ready at ${b}${w.graphqlPath}`)})}]);